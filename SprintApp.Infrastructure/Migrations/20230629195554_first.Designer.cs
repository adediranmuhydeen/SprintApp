// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SprintApp.Infrastructure.Data;

#nullable disable

namespace SprintApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230629195554_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SprintApp.Core.Models.ProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoginAtempt")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VarificationTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectManagers");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Sprint", b =>
                {
                    b.Property<string>("SprintId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ìd")
                        .HasColumnType("int");

                    b.HasKey("SprintId");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("SprintApp.Core.Models.UserStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<string>("SprintId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("SprintId");

                    b.ToTable("UserStorys");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SprintId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("VoterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VoterId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SprintId");

                    b.HasIndex("VoterId1");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Voter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("UserStoryId")
                        .HasColumnType("int");

                    b.Property<int>("VotedPoint")
                        .HasColumnType("int");

                    b.Property<string>("VoterId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("UserStoryId");

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Sprint", b =>
                {
                    b.HasOne("SprintApp.Core.Models.ProjectManager", null)
                        .WithMany("Sprints")
                        .HasForeignKey("ProjectManagerId");
                });

            modelBuilder.Entity("SprintApp.Core.Models.UserStory", b =>
                {
                    b.HasOne("SprintApp.Core.Models.ProjectManager", null)
                        .WithMany("UserStories")
                        .HasForeignKey("ProjectManagerId");

                    b.HasOne("SprintApp.Core.Models.Sprint", null)
                        .WithMany("UserStories")
                        .HasForeignKey("SprintId");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Vote", b =>
                {
                    b.HasOne("SprintApp.Core.Models.Sprint", null)
                        .WithMany("Votes")
                        .HasForeignKey("SprintId");

                    b.HasOne("SprintApp.Core.Models.Voter", null)
                        .WithMany("Votes")
                        .HasForeignKey("VoterId1");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Voter", b =>
                {
                    b.HasOne("SprintApp.Core.Models.ProjectManager", null)
                        .WithMany("Voters")
                        .HasForeignKey("ProjectManagerId");

                    b.HasOne("SprintApp.Core.Models.UserStory", null)
                        .WithMany("Voters")
                        .HasForeignKey("UserStoryId");
                });

            modelBuilder.Entity("SprintApp.Core.Models.ProjectManager", b =>
                {
                    b.Navigation("Sprints");

                    b.Navigation("UserStories");

                    b.Navigation("Voters");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Sprint", b =>
                {
                    b.Navigation("UserStories");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("SprintApp.Core.Models.UserStory", b =>
                {
                    b.Navigation("Voters");
                });

            modelBuilder.Entity("SprintApp.Core.Models.Voter", b =>
                {
                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
